# Canonical SDL for codegen. Update with docs/GRAPHQL_CONTRACT.md

schema { query: Query, mutation: Mutation }

enum BasisEnum { CP AE }
enum LensEnum { ADMIN COFOG }

scalar JSON

type MissionAllocation { code: String!, label: String!, amountEur: Float!, share: Float! }
type Allocation { mission: [MissionAllocation!]!, cofog: [MissionAllocation!] }

type Supplier { siren: String!, name: String! }
type ProcurementItem { supplier: Supplier!, amountEur: Float!, cpv: String, procedureType: String, locationCode: String, sourceUrl: String }

type Accounting { deficitPath: [Float!]!, debtPath: [Float!]! }
type Compliance { eu3pct: [String!]!, eu60pct: [String!]!, netExpenditure: [String!]!, localBalance: [String!]! }
type Macro { deltaGDP: [Float!]!, deltaEmployment: [Float!]!, deltaDeficit: [Float!]!, assumptions: JSON! }

type DecileImpact { d: Int!, deltaNetIncomePct: Float! }
type Distribution { decile: [DecileImpact!]!, giniDelta: Float!, povertyRateDeltaPp: Float!, assumptions: JSON! }

type Source { id: ID!, datasetName: String!, url: String!, license: String!, refreshCadence: String!, vintage: String! }

input RunScenarioInput { dsl: String! }
type RunScenarioPayload { id: ID!, accounting: Accounting!, compliance: Compliance!, macro: Macro!, distribution: Distribution }

type EUCountryCofog { country: String!, code: String!, label: String!, amountEur: Float!, share: Float! }
type FiscalPath { years: [Int!]!, deficitRatio: [Float!]!, debtRatio: [Float!]! }

type Query {
  allocation(year: Int!, basis: BasisEnum = CP, lens: LensEnum = ADMIN): Allocation!
  procurement(year: Int!, region: String!, cpvPrefix: String, procedureType: String, minAmountEur: Float, maxAmountEur: Float): [ProcurementItem!]!
  sources: [Source!]!
  sirene(siren: String!): JSON!
  inseeSeries(dataset: String!, series: [String!]!, sinceYear: Int): JSON!
  dataGouvSearch(query: String!, pageSize: Int = 5): JSON!
  communes(department: String!): JSON!
  euCofogCompare(year: Int!, countries: [String!]!, level: Int = 1): [EUCountryCofog!]!
  euFiscalPath(country: String!, years: [Int!]!): FiscalPath!
}

type Mutation {
  runScenario(input: RunScenarioInput!): RunScenarioPayload!
  saveScenario(id: ID!, title: String, description: String): Boolean!
  deleteScenario(id: ID!): Boolean!
}
